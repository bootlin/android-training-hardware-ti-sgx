include Rules.make

OMAPES:=INVALIDVAL 

.PHONY: all_km buildkernel
.PHONY: clean_km cleankernelmodule
.PHONY: help_km

all_km: buildkernel

buildkernel:
 
ifeq ($(OMAPES),4.x)
	@echo "building the sgx kernel modules..."
	
	@export KERNELDIR=$(KERNEL_INSTALL_DIR) && \
		export PATH=$(CSTOOL_PATH):$(PATH) && \
		export CROSS_COMPILE=$(CSTOOL_PREFIX) && \
		export EURASIAROOT=$(EURASIAROOT) && \
		export ANDROID_ROOT=$(ANDROID_ROOT) && \
		export ARCH=arm && \
		make -C $(GFX_KERNMOD_SRCPATH)/eurasiacon/build/linux2/omap4430_android KERNELDIR=$(KERNEL_INSTALL_DIR) TARGET_PRODUCT=$(TARGET_PRODUCT) SGXCORE=530 SGXCOREREV=125 BUILD=release
	@echo "copying the sgx kernel modules to $(GFX_REL_ES4_LIB_SRCPATH_ANDROID)"
	@cp -rf $(GFX_KERNMOD_SRCPATH)/eurasiacon/binary2_omap4430_android_release/target/pvrsrvkm.ko $(GFX_REL_ES4_LIB_SRCPATH_ANDROID)/. 
	@cp -rf $(GFX_KERNMOD_SRCPATH)/eurasiacon/binary2_omap4430_android_release/target/omaplfb.ko $(GFX_REL_ES4_LIB_SRCPATH_ANDROID)/. 
else ifeq ($(OMAPES),5.x)
	@echo "building the sgx kernel modules..."
	
	@export KERNELDIR=$(KERNEL_INSTALL_DIR) && \
		export PATH=$(CSTOOL_PATH):$(PATH) && \
		export CROSS_COMPILE=$(CSTOOL_PREFIX) && \
		export EURASIAROOT=$(EURASIAROOT) && \
		export ANDROID_ROOT=$(ANDROID_ROOT) && \
		export ARCH=arm && \
		make -C $(GFX_KERNMOD_SRCPATH)/eurasiacon/build/linux2/omap4430_android KERNELDIR=$(KERNEL_INSTALL_DIR) TARGET_PRODUCT=$(TARGET_PRODUCT) SGXCORE=530 SGXCOREREV=125 BUILD=release 
	@echo "copying the sgx kernel modules to $(GFX_REL_ES5_LIB_SRCPATH_ANDROID)"
	@cp -rf $(GFX_KERNMOD_SRCPATH)/eurasiacon/binary2_omap4430_android_release/target/pvrsrvkm.ko $(GFX_REL_ES5_LIB_SRCPATH_ANDROID)/. 
	@cp -rf $(GFX_KERNMOD_SRCPATH)/eurasiacon/binary2_omap4430_android_release/target/omaplfb.ko $(GFX_REL_ES5_LIB_SRCPATH_ANDROID)/. 
else
	@echo "OMAPES value not specified (Mandatory value)"
	exit 1
endif

############################### CLEAN ##################################
clean_km: cleankernelmodule

builddevmem2:
	@echo "building devmem2..."
	make -C $(GFX_DEVMEM2_SRCPATH) && make -C $(GFX_DEVMEM2_SRCPATH) install

cleandevmem2:
	 make -C $(GFX_DEVMEM2_SRCPATH) clean 

cleankernelmodule:
	@echo "cleaning the sgx kernel modules..."
	export KERNELDIR=$(KERNEL_INSTALL_DIR) && \
		export PATH=$(CSTOOL_PATH):$(PATH) && \
		export CROSS_COMPILE=$(CSTOOL_PREFIX) && \
		export EURASIAROOT=$(EURASIAROOT) && \
		export DISCIMAGE=$(ANDROID_DISCIMAGE) && \
		export ANDROID_ROOT=$(ANDROID_ROOT) && \
		make -C $(GFX_KERNMOD_SRCPATH)/eurasiacon/build/linux2/omap4430_android KERNELDIR=$(KERNEL_INSTALL_DIR) TARGET_PRODUCT=$(TARGET_PRODUCT) SGXCORE=530 SGXCOREREV=125 clean 

############################# INSTALL ##################################

install_km:

 ifeq ($(OMAPES),INVALIDVAL)
	@echo "OMAPES value not specified (Mandatory value)..Exiting..."
	exit 1
 endif	
 
  ifeq ($(OMAPES),4.x)
	@cd $(GFX_REL_ES4_LIB_SRCPATH_ANDROID) && \
	export DISCIMAGE=$(ANDROID_DISCIMAGE) && \
	export ANDROID_ROOT=$(ANDROID_ROOT) && \
	export ANDROID_PRODUCT=$(TARGET_PRODUCT) && \
		./install.sh --no-x --no-bcdevice
  endif
  ifeq ($(OMAPES),5.x)
	@cd $(GFX_REL_ES5_LIB_SRCPATH_ANDROID) && \
	export DISCIMAGE=$(ANDROID_DISCIMAGE) && \
	export ANDROID_ROOT=$(ANDROID_ROOT) && \
	export ANDROID_PRODUCT=$(TARGET_PRODUCT) && \
		./install.sh --no-x --no-bcdevice
  endif

############################# HELP ##################################

help_km:
	@echo ""
	@echo "Usage (for build): make"
	@echo "Usage (for install): make install OMAPES={5.x | 6.x}"
	@echo "See online Graphics Getting Started Guide for further details."
	@echo ""

###########################################################################
